{"version":3,"sources":["styles/puma/project.st.css","styles/puma/themes/light.st.css","styles/puma/themes/dark.st.css","styles/puma/blockquote.st.css","styles/puma/spacing.st.css","styles/puma/grid.st.css","styles/puma/inputBase.st.css","styles/puma/label.st.css","styles/puma/dialog.st.css","styles/puma/footer.st.css","styles/puma/banner.st.css","styles/puma/card.st.css","styles/puma/header.st.css","styles/puma/solution.st.css","pages/solution.st.css","components/Header/header.st.css","styles/puma/button.st.css","components/Card/card.st.css","styles/puma/text.st.css","components/Banner/banner.st.css","components/Footer/footer.st.css","styles/puma/inputSelection.st.css","layouts/default.st.css","styles/puma/index.ts","layouts/Default.tsx","components/Banner/Banner.tsx","components/icons/ChevRight.tsx","api.ts","components/Card/Card.tsx","pages/home.tsx","pages/challenges.tsx","pages/solutions.tsx","pages/case-studies.tsx","pages/about.tsx","pages/suggestion.tsx","components/Markdown/transformers/youtube.js","components/Markdown/MarkDownMap.tsx","pages/solution.tsx","pages/case-study.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","stylable","create","Project","ProjectFile","classes","root","Light","light","DefaultLayout","dark","children","ShelleyLight","classnames","Default","Shelley","useState","altTheme","setAltTheme","currentTheme","useEffect","window","localStorage","getItem","React","vh","innerHeight","document","documentElement","style","setProperty","addEventListener","htmlAttributes","lang","class","Banner","classNameProp","className","media","tone","rest","tag","st","grid","goal","text","edge","ChevRight","alt","d","api","setup","baseURL","cache","maxAge","slugConfig","remove","undefined","lower","strict","slug","string","slugify","Card","title","variant","description","url","rootClassNames","src","vol","link","to","pathname","state","Home","challenges","setChallenges","solutions","setSolutions","caseStudies","setCaseStudies","scrollTo","get","then","a","response","data","links","topics","catch","error","console","log","opacity","backgroundImage","backgroundSize","backgroundPosition","uppercase","textBg","formatted","sectionLinkBanner","color3","spacing","mb2","map","item","index","name","key","images","color2","color1","Challenges","group","loadedChallenge","mb8","marginBottom","alignItems","textBannerInline","textBg3","Solutions","content","setContent","metaData","setMetaData","allSolutionsSelected","setallSolutionsSelected","params","useParams","loadTopic","topicKey","ideas","meta","loadAllSolutions","topicId","textBg2","mid","overflowX","overflowY","height","maxHeight","padding","borderTop","background","id","checked","label","type","inputPos","onChange","topic","value","e","target","sectionHeader","mb1","mt2","mb4","role","fullWidth","disabled","pagination","prev","onClick","next","CaseStudies","textBg1","About","Suggestion","placeholder","rows","getYouTubeIFrameSrc","urlString","URL","host","slice","searchParams","embedUrl","forEach","append","timeValue","Number","toString","match","hours","minutes","seconds","String","getTimeValueInSeconds","renderers","heading","node","depth","paragraph","props","includes","Boolean","shouldTransform","href","position","start","column","iframeSrc","width","frameBorder","allow","allowFullScreen","getHTML","listItem","mb05","table","pen","Solution","location","similarSolutions","setSimilarSolutions","image_list","solutionId","page","mainCategores","categories","main_categories","items","orgTypes","organisation_types","news","cat_image","category","cat_name","textBgSm","subCategory","solutionSub","tail","length","push","infinite","arrows","source","plugins","gfm","mt4","buttons","parseInt","CaseStudy","caseStudyId","autoplay","Header","navList","navItem","Footer","App","groupData","setGroupData","rel","exact","path","component","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4d0a09f9.chunk.js","sourcesContent":["\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o3\",\n    {\"classes\":{\"root\":\"s0\"},\"vars\":{\"color-focus\":\"--o2-color-focus\",\"color-error\":\"--o2-color-error\",\"color-form-base-border\":\"--o2-color-form-base-border\",\"color-form-selection-border\":\"--o2-color-form-selection-border\",\"color-form-selection-notch\":\"--o2-color-form-selection-notch\",\"color-toggle-notch\":\"--o2-color-toggle-notch\",\"select-icon\":\"--o2-select-icon\",\"grid-gap\":\"--o2-grid-gap\",\"grid-v1-cols-xs\":\"--o2-grid-v1-cols-xs\",\"grid-v1-cols-sm\":\"--o2-grid-v1-cols-sm\",\"grid-v1-cols-md\":\"--o2-grid-v1-cols-md\",\"text-vol-10-max\":\"--o2-text-vol-10-max\",\"text-vol-10-scale\":\"--o2-text-vol-10-scale\",\"text-vol-10-line-height\":\"--o2-text-vol-10-line-height\",\"light-01-raw\":\"--o3-light-01-raw\",\"light-01\":\"--o3-light-01\",\"dark-01-raw\":\"--o3-dark-01-raw\",\"dark-01\":\"--o3-dark-01\",\"color-ui\":\"--o3-color-ui\",\"color-ui-inverse\":\"--o3-color-ui-inverse\",\"color-ui-raw\":\"--o3-color-ui-raw\",\"color-ui-raw-inverse\":\"--o3-color-ui-raw-inverse\",\"color-accent-1\":\"--o3-color-accent-1\",\"color-accent-2\":\"--o3-color-accent-2\",\"color-accent-3\":\"--o3-color-accent-3\",\"color-accent-4\":\"--o3-color-accent-4\",\"color-background-1\":\"--o3-color-background-1\",\"color-background-2\":\"--o3-color-background-2\",\"color-background-3\":\"--o3-color-background-3\",\"color-background-4\":\"--o3-color-background-4\",\"color-background-modal\":\"--o3-color-background-modal\",\"color-text-1\":\"--o3-color-text-1\",\"color-text-2\":\"--o3-color-text-2\",\"color-text-3\":\"--o3-color-text-3\",\"color-text-4\":\"--o3-color-text-4\",\"grad-1\":\"--o3-grad-1\",\"select-icon-light\":\"--o3-select-icon-light\",\"status-background\":\"--o3-status-background\",\"support-background\":\"--o3-support-background\"},\"stVars\":{\"font-plain\":\"Arial, sans-serif\",\"font-special\":\"Impact, HelveticaNeue-CondensedBlack, Haettenschweiler, AvenirNextCondensed-Bold, 'Arial Narrow Bold', sans-serif\",\"font-mono\":\"Menlo, Courier, Courier New, Andale Mono, monospace\"},\"keyframes\":{}},\n    \"\",\n    2,\n    15,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o60\",\n    {\"classes\":{\"root\":\"s82\"},\"vars\":{\"color-focus\":\"--o2-color-focus\",\"color-error\":\"--o2-color-error\",\"color-form-base-border\":\"--o2-color-form-base-border\",\"color-form-selection-border\":\"--o2-color-form-selection-border\",\"color-form-selection-notch\":\"--o2-color-form-selection-notch\",\"color-toggle-notch\":\"--o2-color-toggle-notch\",\"select-icon\":\"--o2-select-icon\",\"dark-01\":\"--o3-dark-01\",\"dark-01-raw\":\"--o3-dark-01-raw\",\"light-01\":\"--o3-light-01\",\"light-01-raw\":\"--o3-light-01-raw\",\"color-ui\":\"--o3-color-ui\",\"color-ui-raw\":\"--o3-color-ui-raw\",\"color-ui-inverse\":\"--o3-color-ui-inverse\",\"color-ui-raw-inverse\":\"--o3-color-ui-raw-inverse\",\"color-accent-1\":\"--o3-color-accent-1\",\"color-accent-2\":\"--o3-color-accent-2\",\"color-accent-3\":\"--o3-color-accent-3\",\"color-accent-4\":\"--o3-color-accent-4\",\"color-background-1\":\"--o3-color-background-1\",\"color-background-2\":\"--o3-color-background-2\",\"color-background-3\":\"--o3-color-background-3\",\"color-background-4\":\"--o3-color-background-4\",\"color-background-modal\":\"--o3-color-background-modal\",\"color-text-1\":\"--o3-color-text-1\",\"color-text-2\":\"--o3-color-text-2\",\"color-text-3\":\"--o3-color-text-3\",\"color-text-4\":\"--o3-color-text-4\",\"grad-1\":\"--o3-grad-1\",\"status-background\":\"--o3-status-background\",\"support-background\":\"--o3-support-background\",\"grad-1-default\":\"--o60-grad-1-default\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    177,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o59\",\n    {\"classes\":{\"root\":\"s83\"},\"vars\":{\"color-ui\":\"--o3-color-ui\",\"color-background-1\":\"--o3-color-background-1\",\"color-accent-2\":\"--o3-color-accent-2\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    178,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o50\",\n    {\"classes\":{\"root\":\"s86\"},\"vars\":{\"spacing-unit\":\"--o2-spacing-unit\",\"color-accent-1\":\"--o3-color-accent-1\",\"color-background-2\":\"--o3-color-background-2\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    179,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o15\",\n    {\"classes\":{\"root\":\"s27\",\"mtGridGap\":\"s17\",\"mt1\":\"s18\",\"mt2\":\"s19\",\"mt3\":\"s20\",\"mt4\":\"s21\",\"mb05\":\"s22\",\"mb1\":\"s23\",\"mb2\":\"s24\",\"mb3\":\"s25\",\"mb4\":\"s26\"},\"vars\":{\"spacing-unit\":\"--o2-spacing-unit\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    2,\n    18,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o49\",\n    {\"classes\":{\"root\":\"s87\"},\"vars\":{\"spacing-unit\":\"--o2-spacing-unit\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    180,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o51\",\n    {\"classes\":{\"root\":\"s91\"},\"vars\":{\"spacing-unit\":\"--o2-spacing-unit\",\"color-background-3\":\"--o3-color-background-3\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    181,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o48\",\n    {\"classes\":{\"root\":\"s92\"},\"vars\":{\"color-text-2\":\"--o3-color-text-2\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    182,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o57\",\n    {\"classes\":{\"root\":\"s93\"},\"vars\":{\"spacing-unit\":\"--o2-spacing-unit\",\"color-ui-inverse\":\"--o3-color-ui-inverse\",\"color-accent-1\":\"--o3-color-accent-1\",\"color-accent-2\":\"--o3-color-accent-2\",\"color-accent-3\":\"--o3-color-accent-3\",\"color-accent-4\":\"--o3-color-accent-4\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    183,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o52\",\n    {\"classes\":{\"root\":\"s94\",\"navItem\":\"s66\"},\"vars\":{\"spacing-unit\":\"--o2-spacing-unit\",\"color-accent-1\":\"--o3-color-accent-1\",\"color-ui\":\"--o3-color-ui\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    184,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o53\",\n    {\"classes\":{\"root\":\"s97\"},\"vars\":{\"color-accent-1\":\"--o3-color-accent-1\",\"color-accent-2\":\"--o3-color-accent-2\",\"color-accent-3\":\"--o3-color-accent-3\",\"select-icon-light\":\"--o3-select-icon-light\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    185,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o54\",\n    {\"classes\":{\"root\":\"s98\",\"link\":\"s60\"},\"vars\":{\"spacing-unit\":\"--o2-spacing-unit\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    186,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o55\",\n    {\"classes\":{\"root\":\"s99\",\"navItem\":\"s51\"},\"vars\":{\"spacing-unit\":\"--o2-spacing-unit\",\"color-accent-1\":\"--o3-color-accent-1\",\"color-ui\":\"--o3-color-ui\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    187,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o56\",\n    {\"classes\":{\"root\":\"s100\",\"subCategory\":\"s101\",\"solutionSub\":\"s102\"},\"vars\":{\"spacing-unit\":\"--o2-spacing-unit\",\"color-ui-inverse\":\"--o3-color-ui-inverse\",\"color-ui\":\"--o3-color-ui\",\"color-accent-1\":\"--o3-color-accent-1\",\"color-accent-2\":\"--o3-color-accent-2\",\"color-accent-3\":\"--o3-color-accent-3\",\"color-accent-4\":\"--o3-color-accent-4\",\"color-background-2\":\"--o3-color-background-2\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    6,\n    188,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o0\",\n    {\"classes\":{\"root\":\"s28\",\"category\":\"s29\",\"subCategory\":\"s30\",\"solutionSub\":\"s31\",\"awareness-understanding\":\"s32\",\"buildings\":\"s33\",\"consumerism\":\"s34\",\"energy\":\"s35\",\"feedback-measurement\":\"s36\",\"food\":\"s37\",\"general\":\"s38\",\"green-infrastructure\":\"s39\",\"health\":\"s40\",\"indicators-tools\":\"s41\",\"nature\":\"s42\",\"planning\":\"s43\",\"procurement\":\"s44\",\"recycling-reuse\":\"s45\",\"sustainable-cities\":\"s46\",\"transport\":\"s47\",\"water\":\"s48\"},\"vars\":{},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    5,\n    22,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o20\",\n    {\"classes\":{\"root\":\"s49\",\"navList\":\"s50\",\"navItem\":\"s51\"},\"vars\":{},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    1,\n    31,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o16\",\n    {\"classes\":{\"root\":\"s56\",\"linkButton\":\"s54\",\"link\":\"s55\"},\"vars\":{\"spacing-unit\":\"--o2-spacing-unit\",\"color-ui-inverse\":\"--o3-color-ui-inverse\",\"color-ui\":\"--o3-color-ui\",\"color-accent-1\":\"--o3-color-accent-1\",\"color-accent-2\":\"--o3-color-accent-2\",\"color-accent-3\":\"--o3-color-accent-3\",\"color-accent-4\":\"--o3-color-accent-4\",\"color-background-2\":\"--o3-color-background-2\",\"bg-color\":\"--o17-bg-color\",\"border-color\":\"--o17-border-color\",\"text-color\":\"--o17-text-color\",\"seperator-color\":\"--o18-seperator-color\",\"accent\":\"--o16-accent\",\"color-ui-raw\":\"--o16-color-ui-raw\",\"color-ui-raw-inverse\":\"--o16-color-ui-raw-inverse\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    35,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o26\",\n    {\"classes\":{\"root\":\"s57\",\"media\":\"s58\",\"text\":\"s59\",\"link\":\"s60\"},\"vars\":{},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    1,\n    36,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o12\",\n    {\"classes\":{\"root\":\"s16\",\"center\":\"s3\",\"textBg\":\"s4\",\"textBannerInline\":\"s5\",\"textBg1\":\"s6\",\"textBg2\":\"s7\",\"textBg3\":\"s8\",\"textBg4\":\"s9\",\"textBgSm\":\"s10\",\"color1\":\"s11\",\"color2\":\"s12\",\"color3\":\"s13\",\"sectionHeader\":\"s14\",\"sectionLinkBanner\":\"s15\"},\"vars\":{\"spacing-unit\":\"--o2-spacing-unit\",\"light-01\":\"--o3-light-01\",\"color-accent-1\":\"--o3-color-accent-1\",\"color-accent-2\":\"--o3-color-accent-2\",\"color-accent-3\":\"--o3-color-accent-3\",\"color-accent-4\":\"--o3-color-accent-4\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    4,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o25\",\n    {\"classes\":{\"root\":\"s61\",\"media\":\"s62\",\"text\":\"s63\"},\"vars\":{},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    1,\n    43,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o19\",\n    {\"classes\":{\"root\":\"s64\",\"navList\":\"s65\",\"navItem\":\"s66\"},\"vars\":{},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    1,\n    44,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o4\",\n    {\"classes\":{\"root\":\"s76\",\"darkLightToggle\":\"s68\",\"on\":\"s74\"},\"vars\":{\"spacing-unit\":\"--o2-spacing-unit\",\"color-form-base-border\":\"--o2-color-form-base-border\",\"color-background-3\":\"--o3-color-background-3\",\"color-ui\":\"--o3-color-ui\",\"color-focus\":\"--o2-color-focus\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    50,\n    null\n);\n","\n\nmodule.exports = __webpack_require__.stylable.create(\n    \"o1\",\n    {\"classes\":{\"root\":\"s81\",\"navbar\":\"s77\",\"title\":\"s78\",\"controls\":\"s79\",\"inner\":\"s80\"},\"vars\":{\"spacing-unit\":\"--o2-spacing-unit\",\"color-background-1\":\"--o3-color-background-1\",\"color-ui\":\"--o3-color-ui\"},\"stVars\":{},\"keyframes\":{}},\n    \"\",\n    3,\n    51,\n    null\n);\n","import { RuntimeStylesheet } from \"@stylable/runtime\";\r\nimport classnames from \"classnames\";\r\nimport { classes as light } from \"./themes/light.st.css\";\r\nimport { classes as dark } from \"./themes/dark.st.css\";\r\n\r\n// = Foundation Components\r\nimport Button from \"./button.st.css\";\r\nimport Blockquote from \"./blockquote.st.css\";\r\n// import ErrorText from \"./errorText.st.css\";\r\nimport Grid from \"./grid.st.css\";\r\n// import HintText from \"./hintText.st.css\";\r\nimport InputBase from \"./inputBase.st.css\";\r\n// import InputSelect from \"./inputSelect.st.css\";\r\nimport InputSelection from \"./inputSelection.st.css\";\r\n// import InputSelectionControl from \"./inputSelectionControl.st.css\";\r\n// import InputText from \"./inputText.st.css\";\r\nimport Label from \"./label.st.css\";\r\nimport Text from \"./text.st.css\";\r\n\r\nimport Dialog from \"./dialog.st.css\";\r\n\r\n// = Application Components\r\nimport Footer from \"./footer.st.css\";\r\nimport Banner from \"./banner.st.css\";\r\nimport Card from \"./card.st.css\";\r\nimport Header from \"./header.st.css\";\r\n\r\nimport Solution from \"./solution.st.css\";\r\n\r\n// = Project\r\nimport ProjectFile from \"./project.st.css\";\r\n\r\n// import Spacing from \"./banner.st.css\";\r\n// = Helper to extract the class names.\r\nconst getStylableClassNames = (\r\n  values: [],\r\n  stylesheet: RuntimeStylesheet,\r\n  rootcls: string\r\n) => {\r\n  const clsArray = values.map((cls: string) => stylesheet.classes[cls] || null);\r\n  return classnames(stylesheet.classes[rootcls], clsArray);\r\n};\r\n\r\nexport const dialog = (...values: []) =>\r\n  getStylableClassNames(values, Dialog, \"dialog\");\r\n\r\n// = Foundation component exports\r\nexport const button = (...values: []) =>\r\n  getStylableClassNames(values, Button, \"button\");\r\n\r\nexport const blockquote = (...values: []) =>\r\n  getStylableClassNames(values, Blockquote, \"blockquote\");\r\n\r\n// export const errorText = (...values: []) =>\r\n//   getStylableClassNames(values, ErrorText, \"errorText\");\r\n\r\nexport const grid = (...values: []) =>\r\n  getStylableClassNames(values, Grid, \"grid\");\r\n\r\n// export const hintText = (...values: []) =>\r\n//   getStylableClassNames(values, HintText, \"hintText\");\r\n\r\nexport const inputBase = (...values: []) =>\r\n  getStylableClassNames(values, InputBase, \"inputBase\");\r\n\r\n// export const inputSelect = (...values: []) =>\r\n//   getStylableClassNames(values, InputSelect, \"inputSelect\");\r\n\r\nexport const inputSelection = (...values: []) =>\r\n  getStylableClassNames(values, InputSelection, \"inputSelection\");\r\n\r\n// export const inputSelectionControl = (...values: []) =>\r\n//   getStylableClassNames(values, InputSelectionControl, \"inputSelectionControl\");\r\n\r\n// export const inputText = (...values: []) =>\r\n//   getStylableClassNames(values, InputText, \"inputText\");\r\n\r\nexport const label = (...values: []) =>\r\n  getStylableClassNames(values, Label, \"label\");\r\n\r\nexport const text = (...values: []) =>\r\n  getStylableClassNames(values, Text, \"text\");\r\n\r\n// Application component exports\r\n\r\nexport const footer = (...values: []) =>\r\n  getStylableClassNames(values, Footer, \"footer\");\r\n\r\nexport const banner = (...values: []) =>\r\n  getStylableClassNames(values, Banner, \"banner\");\r\n\r\nexport const card = (...values: []) =>\r\n  getStylableClassNames(values, Card, \"card\");\r\n\r\nexport const header = (...values: []) =>\r\n  getStylableClassNames(values, Header, \"header\");\r\n\r\nexport const solution = (...values: []) =>\r\n  getStylableClassNames(values, Solution, \"solution\");\r\n\r\n// = Main classname export\r\nexport const Project = ProjectFile.classes.root;\r\n\r\n// = Theme exports\r\nexport const Light = light.root;\r\nexport const Dark = dark.root;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { InputSelection, Icon } from \"@actionishope/shelley\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { classes as style } from \"./default.st.css\";\r\nimport { Project as Default } from \"@actionishope/shelley/styles/default\";\r\nimport { Project as Shelley, Light } from \"../styles/puma\"; //Dark\r\nimport { classes as selection } from \"../styles/puma/inputSelection.st.css\";\r\n\r\nexport const Header = ({ altTheme, changeTheme }: any) => (\r\n  <div className={style.navbar}>\r\n    <div className={style.inner}>\r\n      <h1 className={style.title}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            textDecoration: \"none\",\r\n          }}\r\n        >\r\n          Solutions Database\r\n        </Link>\r\n      </h1>\r\n      <div className={style.controls}>\r\n        <InputSelection\r\n          id=\"themeSelector\"\r\n          variant={false}\r\n          hint=\"Toggle light mode\"\r\n          label={\r\n            <Icon alt=\"Toggle light mode\">\r\n              <path d=\"M16 8l-2.2-1.6 1.1-2.4-2.7-0.2-0.2-2.7-2.4 1.1-1.6-2.2-1.6 2.2-2.4-1.1-0.2 2.7-2.7 0.2 1.1 2.4-2.2 1.6 2.2 1.6-1.1 2.4 2.7 0.2 0.2 2.7 2.4-1.1 1.6 2.2 1.6-2.2 2.4 1.1 0.2-2.7 2.7-0.2-1.1-2.4 2.2-1.6zM8 13c-2.8 0-5-2.2-5-5s2.2-5 5-5 5 2.2 5 5-2.2 5-5 5z\"></path>\r\n            </Icon>\r\n          }\r\n          className={classnames(selection.darkLightToggle, {\r\n            [selection.on]: altTheme,\r\n          })}\r\n          checked={altTheme}\r\n          onKeyPress={(event) => {\r\n            if (event.key === \"Enter\") {\r\n              changeTheme();\r\n            }\r\n          }}\r\n          onChange={() => {\r\n            changeTheme();\r\n          }}\r\n          type=\"checkbox\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst DefaultLayout = ({ children }: any) => {\r\n  // Define the class names for out theme.\r\n  // const ShelleyDark = classnames(Default, Shelley, Dark);\r\n  const ShelleyLight = classnames(Default, Shelley, Light);\r\n  // Toggle 'alternative' theme state.\r\n  const [altTheme, setAltTheme] = useState<boolean>(false);\r\n  // The alternative here is the light theme.\r\n  // const currentTheme = altTheme ? ShelleyLight : ShelleyDark;\r\n  const currentTheme = ShelleyLight;\r\n\r\n  // const changeTheme = () => {\r\n  //   // Set local storage named key: value.\r\n  //   localStorage.currentTheme = !altTheme ? \"light\" : \"dark\";\r\n  //   // Toggle between alt theme on and off.\r\n  //   setAltTheme(!altTheme);\r\n  // };\r\n\r\n  useEffect(\r\n    // Set the theme based on what is in local storage.\r\n    () => setAltTheme(window.localStorage.getItem(\"currentTheme\") === \"light\"),\r\n    [altTheme]\r\n  );\r\n\r\n  // FYI: https://css-tricks.com/run-useeffect-only-once/\r\n  React.useEffect(() => {\r\n    // First we get the viewport height and we multiple it by 1% to get a value for a vh unit\r\n    const vh = window.innerHeight * 0.01;\r\n    // Then we set the value in the --vh custom property to the root of the document\r\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n\r\n    // We listen to the resize event\r\n    window.addEventListener(\"resize\", () => {\r\n      // We execute the same script as before.\r\n      const vh = window.innerHeight * 0.01;\r\n      document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet\r\n        htmlAttributes={{\r\n          lang: \"en\",\r\n          class: currentTheme,\r\n        }}\r\n      />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultLayout;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { st, classes } from \"./banner.st.css\";\r\n\r\nimport { Grid, GridProps } from \"@actionishope/shelley\";\r\nimport { classes as grid } from \"@actionishope/shelley/styles/default/grid.st.css\";\r\n\r\ninterface BannerProps extends GridProps {\r\n  media?: React.ReactNode;\r\n  tone?: number;\r\n}\r\n\r\nconst Banner = ({\r\n  className: classNameProp,\r\n  media,\r\n  tone = 1,\r\n  children,\r\n  ...rest\r\n}: BannerProps) => {\r\n  return (\r\n    <Grid\r\n      tag=\"header\"\r\n      className={st(classnames(classes.root, classNameProp), { tone })}\r\n      {...rest}\r\n    >\r\n      <div className={classnames(grid.goal, classes.text)}>{children}</div>\r\n      <figure className={classnames(grid.edge, classes.media)}>{media}</figure>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\n\r\nimport { Icon, IconProps } from \"@actionishope/shelley\";\r\n\r\nconst ChevRight = ({ className, alt }: IconProps) => {\r\n  return (\r\n    <Icon alt={alt} className={className}>\r\n      <path d=\"M2 13h2l5-5-5-5h-2l5 5z\"></path>\r\n      <path d=\"M7 13h2l5-5-5-5h-2l5 5z\"></path>\r\n    </Icon>\r\n  );\r\n};\r\nexport default ChevRight;\r\n","import { setup } from \"axios-cache-adapter\";\r\nimport slugify from \"slugify\";\r\n\r\n// Create `axios` instance with pre-configured `axios-cache-adapter` attached to it.\r\nexport const api = setup({\r\n  // `axios` options\r\n  baseURL: \"https://api.vocaleyes.org/v2\",\r\n  // `axios-cache-adapter` options\r\n  cache: {\r\n    maxAge: 15 * 60 * 1000,\r\n  },\r\n});\r\n\r\nexport const slugConfig = {\r\n  remove: undefined, // remove characters that match regex, defaults to `undefined`\r\n  lower: true, // convert to lower case, defaults to `false`\r\n  strict: true, // strip special characters except replacement, defaults to `false`\r\n};\r\n\r\nexport const slug = (string: string) => slugify(string, slugConfig);\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { H3, P } from \"@actionishope/shelley\";\r\nimport { st, classes } from \"./card.st.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  title: string;\r\n  media?: string;\r\n  description?: string;\r\n  url: string;\r\n  /** HTML tag to render as the root for your grid. */\r\n  tag?: string;\r\n  /** Designed to toggle child formatting/alignment rules. */\r\n  formatted?: boolean;\r\n  /** Variant index. */\r\n  variant?: number;\r\n}\r\n\r\nconst Card = ({\r\n  className: classNameProp,\r\n  children,\r\n  variant = 1,\r\n  tag: tagName = \"div\",\r\n  title,\r\n  description,\r\n  media,\r\n  url,\r\n  ...rest\r\n}: CardProps) => {\r\n  const rootClassNames = classnames(classes.root, classNameProp);\r\n\r\n  return (\r\n    <div className={st(rootClassNames)} {...rest}>\r\n      <div className={classes.media}>\r\n        <img\r\n          src={\r\n            media !== \"\"\r\n              ? media\r\n              : \"https://ik.imagekit.io/tcvka0ufln/missing_6VOJII-WVC0k.png\"\r\n          }\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className={classes.text}>\r\n        <H3 className={classes.title} vol={5}>\r\n          {/* <Link className={classes.link} to={url}>\r\n            {title}\r\n          </Link> */}\r\n\r\n          <Link\r\n            className={classes.link}\r\n            to={{\r\n              pathname: `${url}`,\r\n              // Allows us to parse some info to the destination so we\r\n              // can pre-fill data we have rather than wait for the api response.\r\n              state: {\r\n                title,\r\n                description,\r\n                media,\r\n              },\r\n            }}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </H3>\r\n        <P>{description}</P>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { H1, H2, P, Grid } from \"@actionishope/shelley\";\r\nimport Banner from \"../components/Banner/Banner\";\r\nimport ChevRight from \"../components/icons/ChevRight\";\r\nimport { classes as grid } from \"@actionishope/shelley/styles/default/grid.st.css\";\r\nimport { classes as text } from \"../styles/puma/text.st.css\";\r\nimport { classes as spacing } from \"../styles/puma/spacing.st.css\";\r\nimport { api, slug } from \"../api\";\r\nimport Card from \"../components/Card/Card\";\r\n\r\nconst Home = () => {\r\n  const [challenges, setChallenges] = useState<any>();\r\n  const [solutions, setSolutions] = useState<any>();\r\n  const [caseStudies, setCaseStudies] = useState<any>();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    // API for challenges\r\n    api\r\n      .get(`/groups/10479`)\r\n      .then(async (response) => {        \r\n        setChallenges(response.data.data[0].links.topics);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n      // API for solutions\r\n      api.get(`/solutions/10479?per-page=15`)\r\n    .then(async (response) => {     \r\n      setSolutions(response.data.data);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n    // API for case-studies\r\n    api\r\n      .get(\"/news?per-page=15\")\r\n      .then(async (response) => {        \r\n        setCaseStudies(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Solutions database</title>\r\n      </Helmet>\r\n      <Banner\r\n        className={grid.edge}\r\n        media={\r\n          <div\r\n            style={{\r\n              opacity: 0.9,\r\n              backgroundImage: `url(https://ik.imagekit.io/tcvka0ufln/home_TUhFZjeTJ.jpg`,\r\n              backgroundSize: \"cover\",\r\n              backgroundPosition: \"0 50%\",\r\n            }}\r\n          />\r\n        }\r\n      >\r\n        <H1 className={grid.goal} vol={8} uppercase>\r\n          <span className={text.textBg}>Create</span>\r\n          <br />\r\n          <span className={text.textBg}>community</span>\r\n          <br />\r\n          <span className={text.textBg}>well-being</span>\r\n        </H1>\r\n      </Banner>\r\n      <Grid tag=\"main\" variant={1} formatted>\r\n        <div className={classnames(text.sectionLinkBanner, grid.edge)}>\r\n          <H2 className={classnames(text.color3)} vol={7} uppercase>\r\n            <Link to=\"/challenges\">Challenges</Link> <ChevRight />\r\n          </H2>\r\n          <P className={classnames(spacing.mb2)} vol={3}>\r\n            We need to understand the challenges before we can fix anything; get\r\n            familiar with our challenges and lets face them together.\r\n          </P>\r\n          {challenges && (\r\n          <div className={classnames(grid.edge)}>\r\n            <Grid variant={4}>\r\n              {challenges ? (\r\n                challenges.map((item: any, index: number) => {\r\n                  if(index < 3){\r\n                  return (\r\n                    <Card\r\n                      title={item.name}\r\n                      url={`/solutions/${item.key}`}\r\n                      description={item.description}\r\n                      media={(item.images && item.images[0])}\r\n                      key={item.key}\r\n                    />\r\n                  );}\r\n                  else {\r\n                    return null;\r\n                  }\r\n                })\r\n              ) : (\r\n                  <P>No results</P>\r\n                )}\r\n            </Grid>\r\n          </div>\r\n        )}\r\n        </div>\r\n        <div className={classnames(text.sectionLinkBanner, grid.edge)}>\r\n          <H2 className={classnames(text.color2)} vol={7} uppercase>\r\n            <Link to=\"/solutions\">Solutions</Link> <ChevRight />\r\n          </H2>\r\n          <P className={classnames(spacing.mb2)} vol={3}>\r\n            Find solutions that are suited to you and framed around a specific\r\n            challenge, the solutions are updated as they evolve.\r\n          </P>\r\n          {solutions && (\r\n          <div className={grid.edge}>\r\n            <Grid variant={4}>\r\n              {solutions ? (\r\n               solutions.map((item: any, index: number) => {\r\n                if(index < 3){\r\n                  return (\r\n                    <Card\r\n                      title={item.name}\r\n                      url={`/solutions/${item.key}/${item.name}`}\r\n                      description={item.description}\r\n                      media={item.images[0]}\r\n                      key={item.key}\r\n                    />\r\n                  );} else {\r\n                    return null;\r\n                  }\r\n                })\r\n              ) : (\r\n                  <P>No results</P>\r\n                )}\r\n            </Grid>\r\n          </div>\r\n        )}\r\n        </div>\r\n        <div className={classnames(text.sectionLinkBanner, grid.edge)}>\r\n          <H2 className={classnames(text.color1)} vol={7} uppercase>\r\n            <Link to=\"/case-studies\">Case Studies</Link> <ChevRight />\r\n          </H2>\r\n          <P  className={classnames(spacing.mb2)} vol={3}>\r\n            Get inspired by the trailblazers that have completed projects and\r\n            are sharing their experiences and become one yourself!\r\n          </P>\r\n          {caseStudies &&\r\n          <div className={grid.edge}>\r\n            <Grid variant={4}>\r\n          {caseStudies ? (\r\n              caseStudies.map((item: any, index: number) => {\r\n                if(index < 3){\r\n                return (\r\n                  <Card\r\n                    title={item.title}\r\n                    url={`/case-studies/${item.key}/${slug(item.title)}`}\r\n                    description={item.description}\r\n                    media={item.images[0]}\r\n                    key={item.key}\r\n                  />\r\n                );} else {\r\n                  return null;\r\n                }\r\n              })) :(\r\n                <P>No results</P>\r\n              )} \r\n              </Grid>   \r\n            </div>  \r\n          }      \r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport Banner from \"../components/Banner/Banner\";\r\nimport Card from \"../components/Card/Card\";\r\nimport { H1, H3, P, Grid } from \"@actionishope/shelley\";\r\nimport { classes as spacing } from \"@actionishope/shelley/styles/default/spacing.st.css\";\r\nimport { classes as grid } from \"@actionishope/shelley/styles/default/grid.st.css\";\r\nimport { classes as text } from \"../styles/puma/text.st.css\";\r\n\r\ninterface ChallengesProps {\r\n  group: any;\r\n}\r\n\r\n// ({ group }: ChallengesProps) -> props for Challenges\r\nconst Challenges = ({ group }: ChallengesProps) => {\r\n  const [loadedChallenge] = useState<any>();\r\n\r\n\r\n  // const loadChallenge = (topicKey: string) => {\r\n  //   api\r\n  //     .get(`/topics/${topicKey}`)\r\n  //     .then(async (response) => {\r\n  //       setLoadedChallenge(response.data.data[0]);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(error);\r\n  //     });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   // Get the default topic data.\r\n  //   group && loadChallenge(group.links.topics[0].key);\r\n  // }, [group]);\r\n\r\n  return (\r\n    <div className={spacing.mb8}>\r\n      <Helmet>\r\n        <title>Challenges - Solutions database</title>\r\n      </Helmet>\r\n      <Banner\r\n        className={grid.edge}\r\n        style={{\r\n          marginBottom: \"3vw\",\r\n        }}\r\n        media={\r\n          <div\r\n            style={{\r\n              opacity: 0.36,\r\n              backgroundImage: loadedChallenge\r\n                ? `url(${loadedChallenge.images[0]})`\r\n                : \"none\",\r\n              backgroundSize: \"cover\",\r\n              backgroundPosition: \"0 50%\",\r\n            }}\r\n          />\r\n        }\r\n      >\r\n        <Grid variant={2} style={{ alignItems: \"center\" }}>\r\n          <div>\r\n            <H1 vol={8} uppercase>\r\n              <span className={text.textBg}>Explore our</span>\r\n              <br />\r\n              <span className={classnames(text.textBannerInline, text.textBg3)}>\r\n                Challenges\r\n              </span>\r\n            </H1>\r\n          </div>\r\n\r\n          {/* <div className={grid.mid}>\r\n            <P vol={2} style={{ marginBottom: \"10px\" }}>\r\n              <b>Select a challenge from the scroll list:</b>\r\n            </P>\r\n            <div\r\n              style={{\r\n                overflowX: \"hidden\",\r\n                overflowY: \"scroll\",\r\n                height: \"30vh\",\r\n                maxHeight: \"300px\",\r\n              }}\r\n            >\r\n              {group &&\r\n                group.links.topics.map((topic: any, index: number) => {\r\n                  console.log(\"topic\", topic, index);\r\n                  // console.log(\"selected topic\", loadedChallenge);\r\n                  return (\r\n                    <div\r\n                      style={{\r\n                        padding: \"10px 18px\",\r\n                        borderTop: \"1px solid rgba(255,255,255,.05)\",\r\n                        background: \"rgb(27 27 27 / 70%)\",\r\n                      }}\r\n                      key={`topics${topic.key}`}\r\n                    >\r\n                      <InputSelection\r\n                        id={`chal${topic.key}`}\r\n                        checked={\r\n                          loadedChallenge\r\n                            ? loadedChallenge.key === topic.key\r\n                            : false\r\n                        }\r\n                        value={topic.key}\r\n                        name=\"challegesRadios\"\r\n                        label={topic.name}\r\n                        type=\"radio\"\r\n                        variant={1}\r\n                        vol={3}\r\n                        inputPos=\"start\"\r\n                        error=\"Form item error message\"\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                          loadChallenge(e.target.value)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div> */}\r\n        </Grid>\r\n      </Banner>\r\n\r\n      <Grid tag=\"main\" variant={1}>\r\n        <H3\r\n          className={classnames(text.color2, grid.goal, spacing.mb2)}\r\n          vol={6}\r\n          uppercase\r\n        >\r\n          Challenges:\r\n        </H3>\r\n        {group && group.links && (\r\n          <div className={grid.goal}>\r\n            <Grid variant={4}>\r\n              {group.links.topics ? (\r\n                group.links.topics.map((item: any) => {\r\n                  return (\r\n                    <Card\r\n                      title={item.name}\r\n                      url={`/solutions/${item.key}`}\r\n                      description={item.description}\r\n                      media={(item.images && item.images[0])}\r\n                      key={item.key}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                  <P>No results</P>\r\n                )}\r\n            </Grid>\r\n          </div>\r\n        )}\r\n\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Challenges;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport Banner from \"../components/Banner/Banner\";\r\nimport Card from \"../components/Card/Card\";\r\nimport { api, slug } from \"../api\";\r\nimport {\r\n  H1,\r\n  H2,\r\n  Grid,\r\n  Button,\r\n  VisuallyHidden,\r\n  InputSelection,\r\n  P,\r\n  H3,\r\n} from \"@actionishope/shelley\";\r\nimport { classes as grid } from \"@actionishope/shelley/styles/default/grid.st.css\";\r\nimport { classes as text } from \"../styles/puma/text.st.css\";\r\nimport { classes as spacing } from \"../styles/puma/spacing.st.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface ChallengesProps {\r\n  group: any;\r\n}\r\n\r\nconst Solutions = ({ group }: ChallengesProps) => {\r\n  const [content, setContent] = useState<any>([]);\r\n  const [metaData, setMetaData] = useState<any>();\r\n  const [allSolutionsSelected, setallSolutionsSelected] = useState<any>(false);\r\n  const params: any = useParams();\r\n  const loadTopic = (topicKey: string) => {\r\n    api\r\n      .get(`/topics/${topicKey}?per-page=15`)\r\n      .then(async (response) => {\r\n        const data =  response.data.data[0];\r\n        setContent({\r\n          data: data.links.ideas,\r\n          name: data.name,\r\n          description: data.description,\r\n          key: data.key,\r\n          images: data.images\r\n        });\r\n          setMetaData(response.data.meta);\r\n          setallSolutionsSelected(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n  const loadAllSolutions = () => {\r\n    api.get(`/solutions/10479?per-page=15`)\r\n    .then(async (response) => {\r\n      const data =  response.data.data;      \r\n      setContent({\r\n        data: data,        \r\n      });\r\n      setMetaData(response.data.meta);\r\n      setallSolutionsSelected(true);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    // Get the default topic data.    \r\n    if (params.topicId == null) {\r\n      loadAllSolutions();\r\n    } else {\r\n      params.topicId && loadTopic(params.topicId);\r\n    }\r\n    // group && loadTopic(group.links.topics[0].key);\r\n  }, [group, params]);\r\n\r\n  return (\r\n    <div className={spacing.mb8}>\r\n      <Helmet>\r\n        <title>Solutions database</title>\r\n      </Helmet>\r\n      <Banner\r\n        className={grid.edge}\r\n        style={{\r\n          marginBottom: \"3vw\",\r\n        }}\r\n        media={\r\n          <div\r\n            style={{\r\n              opacity: 0.36,\r\n              backgroundImage:\r\n                \"url(https://ik.imagekit.io/tcvka0ufln/solutions1_Rpskm-eQ_.jpg)\",\r\n              backgroundSize: \"cover\",\r\n              backgroundPosition: \"0 50%\",\r\n            }}\r\n          />\r\n        }\r\n      >\r\n        <Grid variant={2}>\r\n          <div>\r\n            <H1 vol={8} uppercase>\r\n              <span className={text.textBg}>Nature &amp;</span>\r\n              <br />\r\n              <span className={text.textBg}>Climate</span>\r\n              <br />\r\n              <span className={classnames(text.textBannerInline, text.textBg2)}>\r\n                Solutions\r\n              </span>\r\n            </H1>\r\n          </div>\r\n          {/* rgb(0 0 0 / 34%) */}\r\n          <div className={grid.mid}>\r\n            <P vol={2} style={{ marginBottom: \"10px\" }}>\r\n              <b>Select a topic from the scroll list:</b>\r\n            </P>\r\n            <div\r\n              style={{\r\n                overflowX: \"hidden\",\r\n                overflowY: \"scroll\",\r\n                height: \"30vh\",\r\n                maxHeight: \"300px\",\r\n              }}\r\n            >\r\n              <div\r\n                      style={{\r\n                        padding: \"10px 18px\",\r\n                        borderTop: \"1px solid rgba(255,255,255,.05)\",\r\n                        background: \"rgb(27 27 27 / 70%)\",\r\n                      }}\r\n                      key={`topics`}\r\n                    >\r\n                      <InputSelection\r\n                        id={`chal`}\r\n                        checked={\r\n                          allSolutionsSelected\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        // value={topic.key}\r\n                        name=\"challegesRadios\"\r\n                        label='All Challenges'\r\n                        type=\"radio\"\r\n                        variant={1}\r\n                        vol={3}\r\n                        inputPos=\"start\"\r\n                        error=\"Form item error message\"\r\n                        onChange={()=> {\r\n                          loadAllSolutions();\r\n                        }}                        \r\n                      />\r\n                    </div>\r\n              {group &&\r\n                group.links.topics.map((topic: any, index: number) => {\r\n                  // console.log(\"selected topic\", content);\r\n                  return (\r\n                    <div\r\n                      style={{\r\n                        padding: \"10px 18px\",\r\n                        borderTop: \"1px solid rgba(255,255,255,.05)\",\r\n                        background: \"rgb(27 27 27 / 70%)\",\r\n                      }}\r\n                      key={`topics${topic.key}`}\r\n                    >\r\n                      <InputSelection\r\n                        id={`chal${topic.key}`}\r\n                        checked={\r\n                          content\r\n                            ? content.key === topic.key\r\n                            : false\r\n                        }\r\n                        value={topic.key}\r\n                        name=\"challegesRadios\"\r\n                        label={topic.name}\r\n                        type=\"radio\"\r\n                        variant={1}\r\n                        vol={3}\r\n                        inputPos=\"start\"\r\n                        error=\"Form item error message\"\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                          loadTopic(e.target.value)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Banner>\r\n      <Grid tag=\"main\" variant={1} formatted>\r\n        <VisuallyHidden>\r\n          <H2 className={classnames(text.sectionHeader, grid.goal)} vol={7}>\r\n            Results\r\n          </H2>\r\n        </VisuallyHidden>\r\n        {allSolutionsSelected ? <div className={grid.goal}></div>: <div className={grid.goal} ><H2 className={classnames(grid.goal, spacing.mb1)} vol={6}>\r\n          {content && content.name}\r\n        </H2>\r\n        <P className={classnames(grid.goal, spacing.mb2)}>\r\n          {content && content.description}\r\n        </P></div>}\r\n        \r\n        <H3\r\n          className={classnames(text.color2, grid.goal, spacing.mb2)}\r\n          vol={6}\r\n          uppercase\r\n        >\r\n          Solutions:\r\n        </H3>\r\n        {content && content.data && (\r\n          <div className={grid.goal}>\r\n            <Grid variant={4}>\r\n              {content.data ? (\r\n                content.data.map((item: any) => {\r\n                  return (\r\n                    <Card\r\n                      title={item.title}\r\n                      url={`/solutions/${item.key}/${allSolutionsSelected ? item.name && slug(item.name) : item.title && slug(item.title)}`}\r\n                      description={item.description}\r\n                      media={item.images[0]}\r\n                      key={item.key}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                  <P>No results</P>\r\n                )}\r\n            </Grid>\r\n          </div>\r\n        )}\r\n\r\n        <Grid\r\n          variant={2}\r\n          formatted\r\n          className={classnames(spacing.mt2, spacing.mb4)}\r\n        >\r\n          {metaData && (\r\n            <>\r\n              <Button\r\n                variant={3}\r\n                tone={5}\r\n                vol={6}\r\n                role=\"link\"\r\n                fullWidth\r\n                disabled={!metaData.pagination.links.prev}\r\n                onClick={() => {\r\n                  // Change to smooth scroll and refs.\r\n                  window.scrollTo(0, 0);\r\n                  api\r\n                    .get(metaData.pagination.links.prev)\r\n                    .then(async (response) => {\r\n                      if(allSolutionsSelected){\r\n                        const data =  response.data.data;\r\n                        setContent({\r\n                          data: data,                          \r\n                        });\r\n                      } else {\r\n                        const data =  response.data.data[0];\r\n                        setContent({\r\n                          data: data.links.ideas,\r\n                          name: data.name,\r\n                          description: data.description,\r\n                          key: data.key,\r\n                          images: data.images\r\n                        });                          \r\n                      }\r\n                      setMetaData(response.data.meta);  \r\n                    })\r\n                    .catch((error) => {\r\n                      console.error(error);\r\n                    });\r\n                }}\r\n              >\r\n                Previous\r\n              </Button>\r\n\r\n              <Button\r\n                variant={3}\r\n                tone={5}\r\n                vol={6}\r\n                role=\"link\"\r\n                fullWidth\r\n                disabled={!metaData.pagination.links.next}\r\n                onClick={() => {\r\n                  // Change to smooth scroll and refs.\r\n                  window.scrollTo(0, 0);\r\n                  api\r\n                    .get(metaData.pagination.links.next)\r\n                    .then(async (response) => {\r\n                      if(allSolutionsSelected){\r\n                        const data =  response.data.data;\r\n                        setContent({\r\n                          data: data,                          \r\n                        });\r\n                      } else {\r\n                        const data =  response.data.data[0];\r\n                        setContent({\r\n                          data: data.links.ideas,\r\n                          name: data.name,\r\n                          description: data.description,\r\n                          key: data.key,\r\n                          images: data.images\r\n                        });                          \r\n                      }\r\n                      setMetaData(response.data.meta);   \r\n                    })\r\n                    .catch((error) => {\r\n                      console.error(error);\r\n                    });\r\n                }}\r\n              >\r\n                Next\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Solutions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport Banner from \"../components/Banner/Banner\";\r\nimport Card from \"../components/Card/Card\";\r\nimport { H1, H2, Grid, Button, VisuallyHidden } from \"@actionishope/shelley\";\r\nimport { classes as grid } from \"@actionishope/shelley/styles/default/grid.st.css\";\r\nimport { classes as text } from \"../styles/puma/text.st.css\";\r\nimport { classes as spacing } from \"../styles/puma/spacing.st.css\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { api, slug } from \"../api\";\r\n\r\nconst CaseStudies = () => {\r\n  const [content, setContent] = useState<any>([]);\r\n  useEffect(() => {\r\n    // Send a GET request to api for CaseStudies.\r\n    api\r\n      .get(\"/news?per-page=15\")\r\n      .then(async (response) => {\r\n        // Set solutions state with data.\r\n        // console.log(response.data);\r\n        setContent(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <div className={spacing.mb8}>\r\n      <Helmet>\r\n        <title>Case Studies - Solutions database</title>\r\n      </Helmet>\r\n      <Banner\r\n        className={grid.edge}\r\n        style={{\r\n          marginBottom: \"3vw\",\r\n        }}\r\n        media={\r\n          <div\r\n            style={{\r\n              opacity: 0.2,\r\n              // backgroundImage:\r\n              //   \"url(https://ik.imagekit.io/tcvka0ufln/solutions1_Rpskm-eQ_.jpg)\",\r\n              backgroundSize: \"cover\",\r\n              backgroundPosition: \"0 50%\",\r\n            }}\r\n          />\r\n        }\r\n      >\r\n        <Grid variant={2}>\r\n          <div>\r\n            <H1 vol={8} uppercase>\r\n              <span className={classnames(text.textBannerInline, text.textBg1)}>\r\n                Case Studies\r\n              </span>\r\n            </H1>\r\n          </div>\r\n          <div className={grid.mid}>{/* TBC */}</div>\r\n        </Grid>\r\n      </Banner>\r\n      <Grid tag=\"main\" variant={1} formatted>\r\n        <VisuallyHidden>\r\n          <H2 className={classnames(text.sectionHeader, grid.goal)} vol={7}>\r\n            Results\r\n          </H2>\r\n        </VisuallyHidden>\r\n\r\n        <div className={grid.goal}>\r\n          <Grid variant={4}>\r\n            {content.data &&\r\n              content.data.map((item: any, index: number) => {\r\n                return (\r\n                  <Card\r\n                    title={item.title}\r\n                    url={`/case-studies/${item.key}/${slug(item.title)}`}\r\n                    description={item.description}\r\n                    media={item.images[0]}\r\n                    key={item.key}\r\n                  />\r\n                );\r\n              })}\r\n          </Grid>\r\n          <Grid\r\n            variant={2}\r\n            formatted\r\n            className={classnames(spacing.mt2, spacing.mb4)}\r\n          >\r\n            {content.meta && (\r\n              <>\r\n                <Button\r\n                  variant={3}\r\n                  tone={5}\r\n                  vol={6}\r\n                  role=\"link\"\r\n                  fullWidth\r\n                  disabled={!content.meta.pagination.links.prev}\r\n                  onClick={() => {\r\n                    // Change to smooth scroll and refs.\r\n                    window.scrollTo(0, 0);\r\n                    api\r\n                      .get(content.meta.pagination.links.prev)\r\n                      .then(async (response) => {\r\n                        setContent(response.data);\r\n                      })\r\n                      .catch((error) => {\r\n                        console.error(error);\r\n                      });\r\n                  }}\r\n                >\r\n                  Previous\r\n                </Button>\r\n\r\n                <Button\r\n                  variant={3}\r\n                  tone={5}\r\n                  vol={6}\r\n                  role=\"link\"\r\n                  fullWidth\r\n                  disabled={!content.meta.pagination.links.next}\r\n                  onClick={() => {\r\n                    // Change to smooth scroll and refs.\r\n                    window.scrollTo(0, 0);\r\n                    api\r\n                      .get(content.meta.pagination.links.next)\r\n                      .then(async (response) => {\r\n                        setContent(response.data);\r\n                      })\r\n                      .catch((error) => {\r\n                        console.error(error);\r\n                      });\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaseStudies;\r\n","import React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport classnames from \"classnames\";\r\nimport { H1, P, Grid } from \"@actionishope/shelley\";\r\nimport Banner from \"../components/Banner/Banner\";\r\nimport { classes as spacing } from \"@actionishope/shelley/styles/default/spacing.st.css\";\r\nimport { classes as grid } from \"@actionishope/shelley/styles/default/grid.st.css\";\r\nimport { classes as text } from \"../styles/puma/text.st.css\";\r\n\r\nconst About = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <div className={spacing.mb8}>\r\n      <Helmet>\r\n        <title>About - Solutions database</title>\r\n      </Helmet>\r\n      <Banner\r\n        className={grid.edge}\r\n        style={{\r\n          marginBottom: \"3vw\",\r\n        }}\r\n      >\r\n        <H1 vol={8} uppercase>\r\n          <span className={classnames(text.textBannerInline, text.textBg2)}>\r\n            About\r\n          </span>\r\n        </H1>\r\n      </Banner>\r\n      <Grid tag=\"main\" variant={1} formatted>\r\n        <P>\r\n          Lorem Ipsum is simply dummy text of the printing and typesetting\r\n          industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n          since the 1500s, when an unknown printer took a galley of type and\r\n          scrambled it to make a type specimen book.\r\n        </P>\r\n\r\n        <P>\r\n          It has survived not only five centuries, but also the leap into\r\n          electronic typesetting, remaining essentially unchanged. It was\r\n          popularised in the 1960s with the release of Letraset sheets\r\n          containing Lorem Ipsum passages, and more recently with desktop\r\n          publishing software like Aldus PageMaker including versions of Lorem\r\n          Ipsum.\r\n        </P>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  H1,\r\n  Grid,\r\n  InputText,\r\n  InputSelect,\r\n  Button,\r\n} from \"@actionishope/shelley\";\r\nimport Banner from \"../components/Banner/Banner\";\r\nimport { classes as spacing } from \"@actionishope/shelley/styles/default/spacing.st.css\";\r\nimport { classes as grid } from \"@actionishope/shelley/styles/default/grid.st.css\";\r\nimport { classes as text } from \"../styles/puma/text.st.css\";\r\n\r\nconst Suggestion = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <div className={spacing.mb8}>\r\n      <Helmet>\r\n        <title>Make a suggestion - Solutions database</title>\r\n      </Helmet>\r\n      <Banner\r\n        className={grid.edge}\r\n        style={{\r\n          marginBottom: \"3vw\",\r\n        }}\r\n      >\r\n        <H1 vol={8} uppercase>\r\n          <span className={classnames(text.textBannerInline, text.textBg2)}>\r\n            Make a suggestion\r\n          </span>\r\n        </H1>\r\n      </Banner>\r\n      <Grid tag=\"main\" variant={1} formatted>\r\n        <div className={grid.mid}>\r\n          <InputSelect\r\n            label={`Suggestion type`}\r\n            placeholder=\"Please select\"\r\n            vol={3}\r\n            variant={3}\r\n            id={`sol2`}\r\n          >\r\n            <option value={`carbon`}>Case Study</option>\r\n            <option value={`plastic`}>Solution</option>\r\n          </InputSelect>\r\n          <br />\r\n          <br />\r\n          <InputText\r\n            placeholder=\"Title...\"\r\n            label={`Title`}\r\n            vol={3}\r\n            variant={3}\r\n            id={`sol1`}\r\n          />\r\n          <br />\r\n          <br />\r\n          <InputText\r\n            label={`Main content`}\r\n            placeholder=\"Start typing...\"\r\n            vol={3}\r\n            variant={3}\r\n            rows={10}\r\n            id={`sol3`}\r\n          />\r\n          <Button\r\n            variant={3}\r\n            vol={5}\r\n            tone={5}\r\n            className={spacing.mt2}\r\n            fullWidth\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Suggestion;\r\n","import React from \"react\";\r\n\r\nexport const shouldTransform = (url) => {\r\n  const { host, pathname, searchParams } = new URL(url);\r\n\r\n  return (\r\n    host === 'youtu.be' ||\r\n    (['youtube.com', 'www.youtube.com'].includes(host) &&\r\n      pathname.includes('/watch') &&\r\n      Boolean(searchParams.get('v')))\r\n  );\r\n};\r\n\r\nexport const getTimeValueInSeconds = (timeValue) => {\r\n  if (Number(timeValue).toString() === timeValue) {\r\n    return timeValue;\r\n  }\r\n\r\n  const {\r\n    2: hours = '0',\r\n    4: minutes = '0',\r\n    6: seconds = '0',\r\n  } = timeValue.match(/((\\d*)h)?((\\d*)m)?((\\d*)s)?/);\r\n\r\n  return String((Number(hours) * 60 + Number(minutes)) * 60 + Number(seconds));\r\n};\r\nexport const getYouTubeIFrameSrc = (urlString) => {\r\n  const url = new URL(urlString);\r\n  const id =\r\n    url.host === 'youtu.be' ? url.pathname.slice(1) : url.searchParams.get('v');\r\n\r\n  const embedUrl = new URL(\r\n    `https://www.youtube-nocookie.com/embed/${id}?rel=0`\r\n  );\r\n\r\n  url.searchParams.forEach((value, name) => {\r\n    if (name === 'v') {\r\n      return;\r\n    }\r\n\r\n    if (name === 't') {\r\n      embedUrl.searchParams.append('start', getTimeValueInSeconds(value));\r\n    } else {\r\n      embedUrl.searchParams.append(name, value);\r\n    }\r\n  });\r\n\r\n  return embedUrl.toString();\r\n};\r\nexport const getHTML = (url) => {\r\n  const iframeSrc = getYouTubeIFrameSrc(url);\r\n\r\n  return <iframe title=\"YouTube content\" width=\"100%\" height=\"315\" src={iframeSrc} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>;\r\n};\r\n","import React from \"react\";\r\nimport { Text, TextProps } from \"@actionishope/shelley\";\r\nimport { classes as grid } from \"@actionishope/shelley/styles/default/grid.st.css\";\r\nimport { classes as spacing } from \"../../styles/puma/spacing.st.css\";\r\n\r\nimport {\r\n  getHTML,\r\n  shouldTransform,\r\n} from \"../../components/Markdown/transformers/youtube\";\r\n\r\nexport const paragraph = ({ children, tag = \"p\", vol = 3 }: TextProps) => (\r\n  <Text {...{ vol, tag }}>{children}</Text>\r\n);\r\n\r\nexport const listItem = ({ children, tag = \"li\", vol = 3 }: TextProps) => (\r\n  <Text {...{ vol, tag }} className={spacing.mb05}>\r\n    {children}\r\n  </Text>\r\n);\r\n\r\nexport const link = (props: any) => {\r\n  // Struggling to get remark working so this is a hack to render youtubes from links.\r\n  // console.log(props, props.node.position.start.column === 1);\r\n  const html =\r\n    shouldTransform(props.href) && props.node.position.start.column === 1 ? (\r\n      getHTML(props.href)\r\n    ) : (\r\n      <a href={`${props.href}`}>{props.children}</a>\r\n    );\r\n  return html;\r\n};\r\n\r\nexport const heading = ({ node, children }: any) => {\r\n  const tag = node.depth === 2 ? \"h2\" : \"h3\";\r\n  const vol = node.depth === 2 ? 6 : 5;\r\n  return <Text {...{ tag, vol }}>{children}</Text>;\r\n};\r\n\r\nexport const table = ({ children }: any) => {\r\n  return <table className={grid.pen}>{children}</table>;\r\n};\r\n\r\nexport const renderers = {\r\n  heading,\r\n  paragraph,\r\n  link,\r\n  listItem,\r\n  table,\r\n};\r\n\r\n// <Text {...{ vol, tag, ...rest }}>{children}</Text>\r\n\r\n// https://www.npmjs.com/package/react-markdown\r\n// root — Whole document\r\n// text — Text (foo)\r\n// break — Hard break (<br>)\r\n// paragraph — Paragraph (<p>)\r\n// emphasis — Emphasis (<em>)\r\n// strong — Strong (<strong>)\r\n// thematicBreak — Horizontal rule (<hr>)\r\n// blockquote — Block quote (<blockquote>)\r\n// link — Link (<a>)\r\n// image — Image (<img>)\r\n// linkReference — Link through a reference (<a>)\r\n// imageReference — Image through a reference (<img>)\r\n// list — List (<ul> or <ol>)\r\n// listItem — List item (<li>)\r\n// definition — Definition for a reference (not rendered)\r\n// heading — Heading (<h1> through <h6>)\r\n// inlineCode — Inline code (<code>)\r\n// code — Block of code (<pre><code>)\r\n// html — HTML node (Best-effort rendering)\r\n// virtualHtml — If allowDangerousHtml is not on and skipHtml is off, a naive HTML parser is used to support basic HTML\r\n// parsedHtml — If allowDangerousHtml is on, skipHtml is off, and html-parser is used, more advanced HTML is supported\r\n// With remark-gfm, the following are also available:\r\n\r\n// delete — Delete text (<del>)\r\n// table — Table (<table>)\r\n// tableHead — Table head (<thead>)\r\n// tableBody — Table body (<tbody>)\r\n// tableRow — Table row (<tr>)\r\n// tableCell — Table cell (<td> or <th>)\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport { renderers } from \"../components/Markdown/MarkDownMap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { api, slug } from \"../api\";\r\nimport DefaultLayout from \"../layouts/Default\";\r\nimport Banner from \"../components/Banner/Banner\";\r\nimport Card from \"../components/Card/Card\";\r\nimport { H1, H2, P, Grid } from \"@actionishope/shelley\";\r\nimport { classes as grid } from \"@actionishope/shelley/styles/default/grid.st.css\";\r\nimport { classes as spacing } from \"@actionishope/shelley/styles/default/spacing.st.css\";\r\nimport { classes as buttons } from \"../styles/puma/button.st.css\";\r\nimport { classes as text } from \"../styles/puma/text.st.css\";\r\nimport { st, classes } from \"./solution.st.css\";\r\n\r\n// @ts-ignore\r\nimport { Slide } from 'react-slideshow-image';\r\nimport 'react-slideshow-image/dist/styles.css';\r\n\r\nconst Solution = ({ match, location }: any) => {\r\n  const params: any = useParams();\r\n  // console.log(match, location, params);\r\n\r\n  // Set the initial content with what have from the link via link state.\r\n  const [content, setContent] = useState<any>({\r\n    name: location.state && location.state.title,\r\n    description: location.state && location.state.description,\r\n    images: location.state && location.state.media,\r\n  });\r\n\r\n  const [caseStudies, setCaseStudies] = useState<any>([]);\r\n  const [similarSolutions, setSimilarSolutions] = useState<any>([]);\r\n  const image_list: any = [];\r\n  useEffect(() => {\r\n    // GET solution via id from the url params.\r\n    api\r\n      .get(`/ideas/${params.solutionId}`)\r\n      .then(async (response) => {\r\n        const page = response.data.data[0];\r\n        // Update content with what comes back from the API\r\n        setContent({\r\n          name: page.name,\r\n          description: page.description,\r\n          images: page.images || false,\r\n          mainCategores: page.categories.main_categories.items || false,\r\n          orgTypes: page.categories.organisation_types.items || false,\r\n          links: page.links,\r\n        });        \r\n        // Get and set case studies\r\n        page.links.news &&\r\n          api\r\n            .get(page.links.news)\r\n            .then(async (response) => {              \r\n              return setCaseStudies(response.data.data);\r\n            })\r\n            .catch((error) => {\r\n              console.error(error);\r\n            });\r\n            page.links.topic.key && \r\n            api\r\n               .get(`/topics/${page.links.topic.key}`)\r\n               .then(async (response) => {\r\n                  return setSimilarSolutions(response.data.data[0].links.ideas);              \r\n               })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });    \r\n    })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });    \r\n  }, [params.solutionId]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={st(classnames(classes.root, spacing.mb8))}>\r\n      <DefaultLayout>\r\n        <Banner\r\n          className={grid.edge}\r\n          style={{\r\n            marginBottom: \"3vw\",\r\n          }}\r\n          media={\r\n            content.images && (\r\n              <div\r\n                style={{\r\n                  opacity: 0.15,\r\n\r\n                  backgroundImage: `url(${\r\n                    (content.mainCategores &&\r\n                      content.mainCategores[0].cat_image)\r\n                    })`,\r\n\r\n                  backgroundSize: \"cover\",\r\n                  backgroundPosition: \"0 50%\",\r\n                }}\r\n              />\r\n            )\r\n          }\r\n        >\r\n          <H2 className={grid.goal} vol={8} uppercase>\r\n            <span\r\n              className={classnames(\r\n                text.textBannerInline,\r\n                classes.category,\r\n                text.color2\r\n              )}\r\n            >\r\n              {content.mainCategores && content.mainCategores[0].cat_name}\r\n            </span>\r\n            <br />\r\n            <span\r\n              className={classnames(\r\n                text.textBannerInline,\r\n                text.textBgSm,\r\n                classes.subCategory\r\n              )}\r\n            >\r\n              {content.links && content.links.topic.name}\r\n            </span>\r\n          </H2>\r\n        </Banner>           \r\n        <Grid tag=\"main\" variant={1} formatted>\r\n          <H1 vol={7}>\r\n            <small className={classnames(classes.solutionSub, text.color2)}>\r\n              Solution:\r\n            </small>\r\n            <br />\r\n            {content.name}\r\n          </H1>\r\n          <P vol={2}>\r\n            <strong>Relevant for: </strong>\r\n            {content.orgTypes &&\r\n              content.orgTypes.map((item: any, index: number) => {\r\n                const tail = index !== content.orgTypes.length - 1 && \", \";\r\n                return (\r\n                  <span key={`cattypes${index}`}>\r\n                    {item.cat_name}\r\n                    {tail}\r\n                  </span>\r\n                );\r\n              })}\r\n          </P>   \r\n           {typeof content.images === \"object\" && content.images.forEach((item: any) => { image_list.push(item);})}\r\n\r\n        <div className={grid.mid}>\r\n        <div className=\"slide-container\"> \r\n            <Slide infinite = {false} arrows = {image_list.length > 1 ? true : false}>\r\n              {image_list && image_list.map((item: any, index: number) => {\r\n                return (<img key={index} src={item} width='100%' alt=\"\"/>);\r\n              })}\r\n            </Slide>\r\n          </div>\r\n          </div>                                          \r\n          <ReactMarkdown\r\n            source={content.description}\r\n            renderers={renderers}\r\n            plugins={[gfm]}\r\n          />\r\n\r\n          <Grid\r\n            variant={2}\r\n            formatted\r\n            className={classnames(\r\n              spacing.mt2,\r\n              spacing.mt4,\r\n              spacing.mb8,\r\n              grid.pen\r\n            )}\r\n          >\r\n            <Link to=\"/solutions\" className={buttons.link}>\r\n              Find more solutions\r\n            </Link>\r\n\r\n            <Link to=\"/suggestion\" className={buttons.link}>\r\n              Suggest a solution\r\n            </Link>\r\n          </Grid>\r\n\r\n          <H2 className={classnames(grid.goal, spacing.mb2)} vol={7} uppercase>\r\n            Related Case studies\r\n          </H2>\r\n          {caseStudies.length > 0 && (\r\n            <div className={grid.goal}>\r\n              <Grid variant={4}>\r\n                {caseStudies.map((item: any) => {\r\n                  return (\r\n                    <Card\r\n                      title={item.title}\r\n                      url={`/case-studies/${item.key}/${slug(item.title)}`}\r\n                      description={item.description}\r\n                      media={item.images[0]}\r\n                      key={item.key}\r\n                    />\r\n                  );\r\n                })}\r\n              </Grid>\r\n            </div>\r\n          )}\r\n          <Grid            \r\n            formatted\r\n            className={classnames(\r\n              spacing.mt2,\r\n              spacing.mt4,             \r\n              grid.pen\r\n            )}\r\n            >                \r\n          <H2 className={classnames(grid.goal, spacing.mb2)} vol={7} uppercase>\r\n            Related Solutions\r\n          </H2>\r\n          {similarSolutions.length > 0 && (\r\n            <div className={grid.goal}>\r\n              <Grid variant={4}>\r\n                {similarSolutions.map((item: any) => {\r\n                  if(parseInt(item.key) !== parseInt(params.solutionId)){                  \r\n                  return (\r\n                    <Card\r\n                      title={item.title}\r\n                      url={`/solutions/${item.key}/${slug(item.title)}`}\r\n                      description={item.description}\r\n                      media={item.images[0]}\r\n                      key={item.key}\r\n                      onClick = {() =>{window.scrollTo(0, 0);}}\r\n                    />\r\n                  );\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })}\r\n              </Grid>\r\n            </div>\r\n          )}\r\n          </Grid> \r\n        </Grid>\r\n      </DefaultLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Solution;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport DefaultLayout from \"../layouts/Default\";\r\nimport Banner from \"../components/Banner/Banner\";\r\nimport { H1, H2, Grid } from \"@actionishope/shelley\";\r\nimport { classes as spacing } from \"@actionishope/shelley/styles/default/spacing.st.css\";\r\nimport { classes as grid } from \"@actionishope/shelley/styles/default/grid.st.css\";\r\nimport { classes as text } from \"../styles/puma/text.st.css\";\r\nimport { st, classes } from \"./solution.st.css\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { renderers } from \"../components/Markdown/MarkDownMap\";\r\nimport gfm from \"remark-gfm\";\r\nimport { api } from \"../api\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { classes as buttons } from \"../styles/puma/button.st.css\";\r\n\r\n// @ts-ignore\r\nimport { Slide } from 'react-slideshow-image';\r\nimport 'react-slideshow-image/dist/styles.css';\r\n\r\nconst CaseStudy = ({ match, location }: any) => {\r\n  let params: any = useParams();\r\n  const image_list: any = [];\r\n  // console.log(match, location, params);\r\n  // Set the initial content with what have from the link via link state.\r\n  const [content, setContent] = useState<any>({\r\n    name: location.state && location.state.title,\r\n    description: location.state && location.state.description,\r\n    // image: location.state && location.state.media,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // GET case study via id from the url params.\r\n    api\r\n      .get(`/news/${params.caseStudyId}`)\r\n      .then(async (response) => {\r\n        const page = response.data.data[0];\r\n        // Update content with what comes back from the API\r\n        setContent({\r\n          name: page.title,\r\n          description: page.description,\r\n          images: page.images,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, [params.caseStudyId]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={st(classnames(classes.root, spacing.mb8))}>\r\n      <DefaultLayout>\r\n        <Banner\r\n          className={grid.edge}\r\n          style={{\r\n            marginBottom: \"3vw\",\r\n          }}\r\n          media={\r\n            content.images && (\r\n              <div\r\n                style={{\r\n                  opacity: 0.15,\r\n                  backgroundImage: `url(${content.images[0]})`,\r\n                  backgroundSize: \"cover\",\r\n                  backgroundPosition: \"0 50%\",\r\n                }}\r\n              />\r\n            )\r\n          }\r\n        >\r\n          <H2 className={grid.goal} vol={8} uppercase>\r\n            <span\r\n              className={classnames(\r\n                text.textBannerInline,\r\n                classes.category,\r\n                text.color1\r\n              )}\r\n            >\r\n              {/* {category.title} */}[Main Category]\r\n            </span>\r\n            <br />\r\n            <span\r\n              className={classnames(\r\n                text.textBannerInline,\r\n                text.textBgSm,\r\n                classes.subCategory\r\n              )}\r\n            ></span>\r\n          </H2>\r\n        </Banner>\r\n        <Grid tag=\"main\" variant={1} formatted>\r\n          <H1 vol={7}>\r\n            <small className={classnames(classes.solutionSub, text.color1)}>\r\n              Case Study:\r\n            </small>\r\n            <br />\r\n            {content.name}\r\n          </H1>\r\n          {typeof content.images === \"object\" && content.images.forEach((item: any) => { image_list.push(item);})}\r\n\r\n        <div className={grid.mid}>\r\n        <div className=\"slide-container\"> \r\n            <Slide infinite = {false} arrows = {image_list.length > 1 ? true : false} autoplay = {false}>\r\n              {image_list && image_list.map((item: any, index: number) => {\r\n                return (<img key={index} src={item} width='100%' alt=\"\"/>);\r\n              })}\r\n            </Slide>\r\n          </div>\r\n          </div>  \r\n          <ReactMarkdown\r\n            source={content.description}\r\n            renderers={renderers}\r\n            plugins={[gfm]}\r\n          />\r\n          <Grid\r\n            variant={2}\r\n            formatted\r\n            className={classnames(\r\n              spacing.mt2,\r\n              spacing.mt4,\r\n              spacing.mb8,\r\n              grid.pen\r\n            )}\r\n          >\r\n            <Link to=\"/case-studies\" className={buttons.link}>\r\n              Find more case studies\r\n            </Link>\r\n\r\n            <Link to=\"/suggestion\" className={buttons.link}>\r\n              Suggest a case study\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </DefaultLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaseStudy;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { st, classes } from \"./header.st.css\";\r\n\r\nimport { Grid, GridProps, Text } from \"@actionishope/shelley\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { classes as grid } from \"@actionishope/shelley/styles/default/grid.st.css\";\r\n\r\nconst Header = ({ className: classNameProp, children, ...rest }: GridProps) => {\r\n  return (\r\n    <Grid\r\n      tag=\"header\"\r\n      className={st(classnames(classes.root, classNameProp))}\r\n      {...rest}\r\n    >\r\n      {/* {children} */}\r\n      <nav className={grid.goal}>\r\n        <ul className={classes.navList}>\r\n          <Text uppercase vol={4} tag=\"li\">\r\n            <Link className={classes.navItem} to=\"/\">\r\n              Home\r\n            </Link>\r\n          </Text>\r\n\r\n          <Text uppercase vol={4} tag=\"li\">\r\n            <Link className={classes.navItem} to=\"/challenges\">\r\n              Challenges\r\n            </Link>\r\n          </Text>\r\n\r\n          <Text uppercase vol={4} tag=\"li\">\r\n            <Link className={classes.navItem} to=\"/solutions\">\r\n              Solutions\r\n            </Link>\r\n          </Text>\r\n\r\n          <Text uppercase vol={4} tag=\"li\">\r\n            <Link className={classes.navItem} to=\"/case-studies\">\r\n              Case Studies\r\n            </Link>\r\n          </Text>\r\n        </ul>\r\n      </nav>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { st, classes } from \"./footer.st.css\";\r\n\r\nimport { Grid, GridProps, Text } from \"@actionishope/shelley\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { classes as grid } from \"@actionishope/shelley/styles/default/grid.st.css\";\r\n\r\nconst Footer = ({ className: classNameProp, children, ...rest }: GridProps) => {\r\n  return (\r\n    <Grid\r\n      tag=\"footer\"\r\n      className={st(classnames(classes.root, classNameProp))}\r\n      {...rest}\r\n    >\r\n      <nav className={grid.goal}>\r\n        <ul className={classes.navList}>\r\n          <Text uppercase vol={4} tag=\"li\">\r\n            <Link className={classes.navItem} to=\"/about\">\r\n              About\r\n            </Link>\r\n          </Text>\r\n        </ul>\r\n      </nav>\r\n\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  // useParams,\r\n  // Link,\r\n} from \"react-router-dom\";\r\n\r\nimport DefaultLayout from \"./layouts/Default\";\r\nimport HomePage from \"./pages/home\";\r\nimport ChallengesPage from \"./pages/challenges\";\r\nimport SolutionsPage from \"./pages/solutions\";\r\nimport CaseStudies from \"./pages/case-studies\";\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\nimport About from \"./pages/about\";\r\nimport Suggestion from \"./pages/suggestion\";\r\nimport Solution from \"./pages/solution\";\r\nimport CaseStudy from \"./pages/case-study\";\r\nimport Header from \"./components/Header/Header\";\r\n\r\nimport { api } from \"./api\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nconst App = () => {\r\n  // Set the initial content with what have from the link via link state.\r\n  const [groupData, setGroupData] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    // GET solution via id from the url params.\r\n    api\r\n      .get(`/groups/10479`)\r\n      .then(async (response) => {\r\n        // console.log(\"response\", response.data.data[0]);\r\n        // Update solutions content with what comes back from the API\r\n        setGroupData(response.data.data[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <HelmetProvider>\r\n      <Helmet>\r\n        <title>LocalEyes</title>\r\n        <meta\r\n          name=\"apple-mobile-web-app-status-bar-style\"\r\n          content=\"black-translucent\"\r\n        ></meta>\r\n        {/* <link rel=\"manifest\" href=\"./shelley.webmanifest\"></link> */}\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://use.typekit.net/bml4mzu.css\"\r\n        ></link>\r\n      </Helmet>\r\n      <DefaultLayout>\r\n        <Router>\r\n          <Header />\r\n          {/*\r\n          A <Switch> looks through all its children <Route>\r\n          elements and renders the first one whose path\r\n          matches the current URL. Use a <Switch> any time\r\n          you have multiple routes, but you want only one\r\n          of them to render at a time\r\n        */}\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <HomePage />\r\n            </Route>\r\n            <Route exact path=\"/challenges\">\r\n              <ChallengesPage group={groupData} />\r\n            </Route>\r\n            <Route exact path=\"/solutions\">\r\n              <SolutionsPage group={groupData} />\r\n            </Route>\r\n            <Route exact path=\"/case-studies\">\r\n              <CaseStudies />\r\n            </Route>\r\n            <Route exact path=\"/about\">\r\n              <About />\r\n            </Route>\r\n            <Route exact path=\"/suggestion\">\r\n              <Suggestion />\r\n            </Route>\r\n            <Route exact path=\"/solutions/:topicId\">\r\n              <SolutionsPage group={groupData} />\r\n            </Route>\r\n          </Switch>\r\n          <Route\r\n            path=\"/solutions/:solutionId/:solutionSlug\"\r\n            component={Solution}\r\n          />\r\n          <Route\r\n            path=\"/case-studies/:caseStudyId/:caseStudySlug\"\r\n            component={CaseStudy}\r\n          />\r\n          <Footer />\r\n        </Router>\r\n      </DefaultLayout>\r\n    </HelmetProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}